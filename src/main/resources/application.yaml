server:
  port: ${SERVER_PORT:8080}
  host: localhost
logging:
  level:
    root: ${LOGGING_LEVEL:debug}

spring:
  main:
    allow-circular-references: ${SPRING_ALLOW_CIRCULAR_REFERENCES:true}

  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver

    hikari:
      connectionTimeout: 30000
      minimumIdle: 5
      maximumPoolSize: 20
    jpa:
      properties:
        hibernate:
          max_fetch_depth: 3
          dialect: org.hibernate.dialect.PostgreSQL9Dialect
          hbm2ddl:auto: update
          cache:
            provider_class: org.hibernate.cache.NoCacheProvider"
            use_query_cache: false
            use_minimal_puts: false
      database-platform: org.hibernate.dialect.PostgreSQL9Dialect
      show-sql: true

bot:
  username: ${TELEGRAM_BOT_USERNAME}
  token: ${TELEGRAM_BOT_TOKEN}

telegram:
  channel:
    id: ${TELEGRAM_CHANNEL_ID:NOT_USED_VALUE}
  owner:
    chat:
      id: ${TELEGRAM_OWNER_CHAT_ID}

open-api:
  secret-key: ${OPEN_API_SECRET_KEY}

anthropic:
  x-api-key: ${ANTHROPIC_X_API_KEY}
  version: ${ANTHROPIC_VERSION}

midjourney:
  key: ${MIDJOURNEY_KEY}
  secret: ${MIDJOURNEY_SECRET}

stable-diffusion:
  key: ${STABLE_DIFFUSION_KEY}
  image-url-pattern: ${STABLE_DIFFUSION_IMAGE_URL_PATTERN_1}
  image-url-pattern-2: ${STABLE_DIFFUSION_IMAGE_URL_PATTERN_2}

yandex:
  passport-oauth-token: ${YANDEX_PASSPORT_OAUTH_TOKEN}
  folder-id: ${YANDEX_FOLDER_ID}

payment:
  robokassa:
    merchant-login: ${ROBOKASSA_MERCHANT_LOGIN}
    merchant-password: ${ROBOKASSA_MERCHANT_PASSWORD}
  cryptocloud:
    shop-id: ${CRYPTOCLOUD_SHOP_ID}
    token: ${CRYPTOCLOUD_TOKEN}